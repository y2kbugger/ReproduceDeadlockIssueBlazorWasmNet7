@page "/counter"
@using Microsoft.Azure.Cosmos

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<p>
    <label>CosmosKey:
        <InputText @bind-Value="CosmosKey" />
    </label>
</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

@code {
    private int currentCount = 0;
    private string CosmosEndpoint = "https://cosnothrowawayadlfkjasdlkfj.documents.azure.com:443/";
    private string CosmosKey="";
    private async Task IncrementCount()
    {
        currentCount++;
        Console.WriteLine("Creating client");

        // Create a new client
        var c = new CosmosClient(
            CosmosEndpoint, CosmosKey,
            new CosmosClientOptions()
                {
                    ApplicationName = "Test",
                    ConnectionMode = ConnectionMode.Gateway,
                }
            );
        Console.WriteLine($"Client created: `{c.ToString()}`");

        // Create a new database
        var database = await c.CreateDatabaseIfNotExistsAsync("Test");
        Console.WriteLine($"Created database {database.Database.Id}");

        // Create a new container
        var container = await database.Database.CreateContainerIfNotExistsAsync("TestContainer", "/id");
        Console.WriteLine($"Created container {container.Container.Id}");


        // Create a new item
        var item = new { id = Guid.NewGuid().ToString() };
        var response = await container.Container.CreateItemAsync(item);
        Console.WriteLine($"Item with id {response.Resource.id} created successfully");

        // Read the item
        var response2 = await container.Container.ReadItemAsync<dynamic>(item.id, new PartitionKey(item.id));
        Console.WriteLine($"Item with id {response2.Resource.id} read successfully");
    }
}
